---
title: "Creating a private link to Oracle"

---

A typical evaluation scenario is to use an existing Oracle infrastructure for the front end and PostgreSQL for reporting purposes. This setup helps evaluate PostgreSQL without risking the production environment.

## Setting up a private link to a remote Oracle server from an private cluster in Azure

Assume that your Oracle database is deployed on a virtual machine in the France Central region and is being linked to your cluster with the following environment details.   

-   Cluster:
    -   Region: `Japan East`
    -   Subscription: `test`
    -   Cluster ID: `p-c4j0jfcmp3af2ieok5eg` 
    -   Account ID: `brcxzr08qr7rbei1` 
    -   Organization's domain name: `biganimal.io` 
    -   Virtual Network: `vnet-cluster`

-   Oracle client VM called `client-vm`:
    -   Port: `1555`
    -   Region: `France Central`
    -   Subscription: `development`
    -   Resource group: `rg-client`
    -   Virtual network: `vnet-client`
    -   Virtual network subnet: `snet-client`

### Step 1: Create a standard load balancer for Oracle's virtual network

1. In the search box at the top of the portal, enter Load balancer. Select **Load balancers** in the search results. See [What is Azure Load Balancer](https://docs.microsoft.com/en-us/azure/load-balancer/load-balancer-overview) for details.

2. In the Load balancer page, select **Create**.

3. In the Basics tab of the Create load balancer page, enter, or select the following information:
   1. Use a unique **Name** for the load balancer, for example `dblink-lb`.
   2. Select the **Subscription** (`development`) and the Resource group (`rg-client`), on which the Oracle's virtual machine is deployed.
   3. Select the **Region** (`France Central`) where Oracle's virtual machine is deployed. 
   4. Select the **SKU** as `Standard`.
   5. Select **Type** as `Internal`.
4. In the Frontend IP configuration tab, select **+Add a frontend IP configuration**, enter, or select the following information:
   1. Use a unique **Name** for the frontend IP configuration, for example `frontend-ip-lb`.
   2. Select the same virtual network (`vnet-client`) and subnet (`snet-client`) details used for deploying Oracle's virtual machine.
5. In the Backend pools tab, select **+ Add a backend pool**,  enter, or select the following information:
   1. Use a unique **Name** for the backend pool, for example `backend-pool-lb`.
   2. Select **+Add** and add the virtual machine (`client-vm`) on which the Oracle database is deployed. 
6. In the Inbound rules tab, select **Add a load balancing rule**.
   1. Select the Frontend IP address and Backend pool created previously in this procedure. 
   2. Enter the Oracle port (`1555`) as the backend port.
   3. Under Health Probe, select **Create new** and configure the criterion for which the instance can be considered healthy and receive traffic.
7. The load balancing rule is listed in the Inbound rules tab.
8. Select **Review + create** and **Create**.


### Step 2: Create an Azure Private Link service for your database

In this step, you create an [Azure Private Link service](https://docs.microsoft.com/en-us/azure/private-link/private-link-service-overview) in your cluster's resource group.

1.  Get the resource group details from the Azure CLI or the Azure portal and note the resource group name. For example, if the database's virtual network is `vnet-client`, use the following command: 

    ```shell
      $ az network vnet list --query "[?name==\`vnet-client\`].resourceGroup" -o json

    ```

1.  On the upper-left part of the page in the Azure portal, select **Create a resource**.

1.  In the **Search the Marketplace** box, search for *Private Link*.

1.  Select **Create**.

1.  Enter the details for the Azure Private Link. Use a unique name for the Azure Private Link, for example `db-service-private-link`. 

2.  Enter the resource group name which is output from step 1. 

3.  In the **Outbound settings** page, select the Load balancer and Load balancer frontend IP address created above.

4.  On the **Access security** page, configure the level of access for the private link service. See [control service exposure](https://docs.microsoft.com/en-us/azure/private-link/private-link-service-overview#control-service-exposure) for details.

    ![](../images/image21.png)  

    !!! Note
        If the required access is not provided to the account or subscription accessing the database, you must manually approve the connection request from the **Pending connections** page in **Private Link Center**.


5.  After the private link service is created, note its alias. The alias is the unique ID for your private service, which you can share with the service consumers. Obtain the alias either from the Azure portal or by using the following CLI command:

    ```shell
      $ az network private-link-service list --query "[?name=='db-service-private-link'].alias" -o tsv
      p-c4j0jfcmp3af2ieok5eg-service-private-link.48f26b42-45dc-4e80-8e3d-307d58d7d274.japaneast.azure.privatelinkservice
    ```

6.  Select **Review + Create**.

7.  Select **Create**.

### Step 3: Create an Azure Private Endpoint in your cluster's virtual network

  In this example, you create an Azure Private Endpoint in your cluster's virtual network. After you create the private endpoint, you can use its private IP address to access the Oracle database.

1.  On the upper-left side of the screen in the Azure portal, select **Create a resource > Networking > Private Link**, or in the search box enter *Private Link*.

2.  Select **Create**.

3.  In Private Link Center, select **Private endpoints** in the menu on the left.

4.  In Private endpoints, select **Add**.

5.  Enter the details for the private endpoint as shown in the following image. Use a unique name for the private endpoint. 

    For example, enter `vnet-cluster-private-pg-service`, where `vnet-cluster` is the client VNet ID. 

    !!! Note
        In a later step, you need the private endpoint's name to get its private IP address.

6.  Connect the private endpoint to the private link service that you created by entering its alias.

7.  In the **Configuration** page, enter the cluster's Virtual Network *vnet-client*.

8.  Select **Review + Create**.

9.  Select **Create**.

    !!!Note
       If the private endpoint's status appears as **Pending**, your account or subscription might not be authorized to access the private link service. 

       To resolve this issue, the connection must be manually approved from the Pending connections page in Private Link Center, from the Oracle's Azure subscription.

    !!!


10. You have successfully built a tunnel between your Oracle database and the cluster. Connect to cluster as follows:  


    ```shell
      psql -W "postgres://edbuser@172.21.0.5:5432/edbstore?sslmode=require" 
      Password: 
      psql (12.9 (Ubuntu 12.9-Bubuntu0.20.04.1). server 14.2.1 (Debian 14.2.1-14deb10)) 
      WARNING: psql major version 12, server major version 14. 
                Some psql features might not work.
      SSL connection (protocol: TL5v1.3. cipher: TLS_AE5_256_GCM_SliA364. bits: 256. compression: off) Type "help" for help. 
    ```

11. Create a dblink for your Oracle database.From the client VM *vm-client*, access the cluster by using the private IP address:

    ```shell
       edbstore.# create public database link oraconnpriv connect to system identified by 1/XE.:^C edbstore-# create public database link oraconnpriv connect to system identified by 521/XE.: CREATE DATABASE LINK edbstore=# select s sdate from dualBoraconn,riv; 
       using oci V/172.21.0.4:152 
       using ocl V/10.240.8.135:1 
   edbstore=# drop public database link oraconnpriv; oROP DATABASE LINK dbstorewil create public database link oraconnpriv connect to system identified by REATE DATABASE LINK dbstorewit select sysdate from dualtoraconnpriv; sysdate 
   12-APR-22 B8:02:52 (1 row) 1 
    using oci 7/18.248.19.135,1521/Xf., 

    ```